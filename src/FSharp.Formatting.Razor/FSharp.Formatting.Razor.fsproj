<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <IsPackable>true</IsPackable>
    <!-- workaround for inlining p2p references in nuget; include custom target from Directory.Build.props -->
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
  </PropertyGroup>
  <ItemGroup>
    <None Include="paket.references" />
    <Compile Include="../Common/AssemblyInfo.fs">
      <Link>Common/AssemblyInfo.fs</Link>
    </Compile>
    <Compile Include="../Common/Collections.fs">
      <Link>Common/Collections.fs</Link>
    </Compile>
    <Compile Include="../Common/StringParsing.fs">
      <Link>Common/StringParsing.fs</Link>
    </Compile>
    <Compile Include="Razor.fs" />
    <Compile Include="Main.fs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\FSharp.Literate\FSharp.Literate.fsproj" />
    <ProjectReference Include="..\FSharp.MetadataFormat\FSharp.MetadataFormat.fsproj" PrivateAssets="All" />
  </ItemGroup>

  <!-- Since Paket.Restore.targets isn't capable of expressing this,
        override AspNetCore packages to properly constrain the generated nuget package -->
  <ItemGroup Condition="'$(PackageOutputPath)' != ''">
    <PackageReference Include="RazorEngine.NetCore" Version="[2.2.6, 3.0)" />
    <PackageReference Include="Microsoft.AspNetCore.Razor" Version="[2.2, 3.0)" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Runtime" Version="[2.2, 3.0)" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Language" Version="[2.2, 3.0)" />
  </ItemGroup>
  
  <Import Project="..\..\.paket\Paket.Restore.targets" />
</Project>